#!/bin/bash

echo "🔍 Markdown 및 MDX 링크 검사 중..."

declare -A urlLocations

# 링크 추출
while IFS=: read -r file line url; do
    [[ -z "$url" ]] && continue
    if [[ -n "${urlLocations[$url]}" ]]; then
        urlLocations["$url"]+=", ${file}:${line}"
    else
        urlLocations["$url"]="${file}:${line}"
    fi
done < <(
    find . -type f \( -iname "*.md" -o -iname "*.mdx" \) -exec awk '
    {
        remainder = $0;
        while(match(remainder, /\[[^]]+\]\((https?:\/\/[^)]+)\)/, arr)) {
            print FILENAME ":" FNR ":" arr[1];
            remainder = substr(remainder, RSTART + RLENGTH);
        }
    }
    ' {} +
)

total=${#urlLocations[@]}
echo "🔗 검사 대상 링크 수: $total"
echo

# 임시 파일
tmp_output=$(mktemp)
> "$tmp_output"

# 진행 상태를 위한 임시 카운터 파일
counter_file=$(mktemp)
echo 0 > "$counter_file"

# 병렬 함수 정의
check_url() {
    local url="$1"
    local location="$2"
    local index_file="$3"
    local total="$4"

    local status
    status=$(curl -o /dev/null -s -w "%{http_code}" "$url")

    # 진행률 업데이트
    {
        flock -x 200
        current=$(< "$index_file")
        current=$((current + 1))
        echo "$current" > "$index_file"
        echo "🔄 [$current/$total] 검사 중: $url"
    } 200<>"$index_file"

    # 결과 기록
    if [[ "$status" -ge 200 && "$status" -lt 400 ]]; then
        echo "✅ $url" >> "$tmp_output"
    elif [[ "$status" == "429" ]]; then
        echo "⚠️  $url | 429 Too Many Requests (무시됨)" >> "$tmp_output"
    else
        echo "❌ $url | $status | 위치: $location" >> "$tmp_output"
    fi
}

export -f check_url
export tmp_output
export counter_file

# 입력 준비: URL | 위치
printf "%s|%s\n" "${!urlLocations[@]}" "${urlLocations[@]}" | \
    paste -d "|" - - | \
    xargs -P3 -n1 -I{} bash -c '
        IFS="|" read -r url location <<< "{}"
        check_url "$url" "$location" "$counter_file" '"$total"'
    '

echo
echo "📄 검사 결과:"
grep -E "^✅|^⚠️" "$tmp_output" | sort
echo

# 오류 출력 정리
errors=$(grep "^❌" "$tmp_output")
if [[ -n "$errors" ]]; then
    echo "‼️ 오류가 발생한 링크 목록:"
    echo "────────────────────────────────────────────"
    while IFS= read -r line; do
        url=$(echo "$line" | cut -d '|' -f1 | sed 's/^❌ //')
        status=$(echo "$line" | cut -d '|' -f2 | xargs)
        location=$(echo "$line" | cut -d '|' -f3- | sed 's/^ 위치: //')
        echo "🔗 $url"
        echo "   └─ 상태 코드: $status"
        if [[ -n "$location" ]]; then
            echo "   └─ 위치: $location"
        else
            echo "   └─ 위치 정보 없음"
        fi
        echo
    done <<< "$errors"
else
    echo "모든 링크가 정상입니다!"
fi

# 정리
rm "$tmp_output" "$counter_file"
